[tool.poetry]
name = "python_homework_nlp"
version = "0.0.0"
description = "Python homework exercise to pull out words of interest from text files via NLP."
readme = "README.md"
license = "GPL-3.0-only"
authors = ["Craig Astill <craig.astill@gmail.com>"]
homepage = "https://github.com/jackson15j/python_homework_nlp"
repository = "https://github.com/jackson15j/python_homework_nlp"
keywords = ["nlp"]
classifiers = [
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Text Processing :: Linguistic",
    "",
]

[tool.poetry.dependencies]
python = "^3.9"
nltk = "^3.6.6"

[tool.poetry.dev-dependencies]
black = "*"
flake8 = "*"
mypy = "*"
pycodestyle = "*"
pytest = "*"
pytest-cov = "*"
pytest-html = "*"

[tool.poetry.scripts]
app = "python_homework_nlp.main:main"

[tool.poetry-dynamic-versioning]
# Need to explicitly install the plugin:
#
# * https://github.com/mtkennerly/poetry-dynamic-versioning.
# * `poetry self add "poetry-dynamic-versioning[plugin]"`.
enable = true
# Explicit duplicate of the default pattern but remove the `v` prefix.
pattern = '''
(?x)                                                        (?# ignore whitespace)
    ^((?P<epoch>\d+)!)?(?P<base>\d+(\.\d+)*)                   (?# 1.2.3 or 1!2000.1.2)
    ([-._]?((?P<stage>[a-zA-Z]+)[-._]?(?P<revision>\d+)?))?     (?# b0)
    (\+(?P<tagged_metadata>.+))?$                               (?# +linux)
'''

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.black]
line-length = 82
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | build
    | dist
    | migrations     # exclude django generated folders.
  )/
  | version.py           # also separately exclude a file named foo.py in
                     # the root of the project
)
'''


[[tool.mypy.overrides]]
# NOTE: The `nltk` module doesn't appear to maintain an internal or separate
# PEP-561 type file. See:
#
# https://mypy.readthedocs.io/en/stable/running_mypy.html#missing-library-stubs-or-py-typed-marker
# https://mypy.readthedocs.io/en/stable/config_file.html?highlight=pyproject.toml#using-a-pyproject-toml-file
module = "nltk.*"
ignore_missing_imports = true


[tool.pytest.ini_options]
# Directories that are not visited by pytest collector:
norecursedirs = [
  "*.egg",
  ".eggs",
  "dist",
  "build"
]
junit_suite_name = "tests"
junit_logging = "all"
junit_family = "xunit2"
python_files = [
    "test_*.py",
    "*_test.py",
    "tests.py"
]
addopts = "-ra --durations=10 --junitxml=build/test-reports/py_unittests.xml --html=build/test-reports/py_unittests.html --self-contained-html"
