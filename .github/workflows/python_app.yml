# This workflow will install Python dependencies, run tests and lint with a
# single version of Python For more information see:
# https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  # NOTE: Opening up to build against all branches, due to doing merges
  # locally. Typically I would stick with PR-building + Authoritative
  # Branch/Tag building.
  push:
  pull_request:
    branches: [ main ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Pre-Req. - Install poetry
      run: curl -sSL https://install.python-poetry.org | python3 -
    - name: Pre-Req. - Install poetry-dynamic-versioning
      run: poetry self add "poetry-dynamic-versioning[plugin]"
    - name: Deps - Install dependencies
      run: poetry install
    - name: Checkers - pycodestyle
      run: poetry run pycodestyle .
    - name: Checkers - flake8
      run: poetry run flake8 .
    - name: Checkers - black
      run: poetry run black . --check --diff
    - name: Checkers - mypy
      run: poetry run mypy .
    - name: Tests - pytest
      run: poetry run pytest
    - name: System - run App (python)
      run: poetry run python python_homework_nlp/main.py
    - name: System - run App (entrypoint)
      run: poetry run app
    - name: System - run App (ConsoleRenderer)
      run: poetry run app --output_to_console
